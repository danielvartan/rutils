[{"path":"https://danielvartan.github.io/rutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daniel Vartanian Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danielvartan.github.io/rutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Vartanian. Author, maintainer, conceptor, copyright holder.","code":""},{"path":"https://danielvartan.github.io/rutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vartanian, D.. (2025). {rutils}: Utility functions R. R package. https://danielvartan.github.io/rutils","code":"@Misc{,   title = {{rutils}: Utility functions for R},   author = {Daniel Vartanian},   year = {2025},   url = {https://danielvartan.github.io/rutils},   note = {R package}, }"},{"path":[]},{"path":"https://danielvartan.github.io/rutils/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Utility Functions for R","text":"🧰🛠️🔧⚙️🧮📋📁🔗🧹📝💾🔢 rutils R package (Daniel Vartanian) use store organize utility functions ready moved package. package intended public use, welcome use find helpful. Please note functions exported documented. Access source code see .","code":""},{"path":"https://danielvartan.github.io/rutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility Functions for R","text":"can install rutils using remotes package:","code":"remotes::install_github(\"danielvartan/rutils\")"},{"path":"https://danielvartan.github.io/rutils/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Utility Functions for R","text":"rutils code released MIT license.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NA values from an atomic object — drop_na","title":"Remove NA values from an atomic object — drop_na","text":"drop_na() remove NA values atomic object.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NA values from an atomic object — drop_na","text":"","code":"drop_na(x)"},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NA values from an atomic object — drop_na","text":"x atomic object type.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NA values from an atomic object — drop_na","text":"object type x NA values removed.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NA values from an atomic object — drop_na","text":"","code":"drop_na(c(1, NA, 2, 3, NA, 4)) #> [1] 1 2 3 4 #> [1] 1 2 3 4 # Expected  drop_na(c(\"a\", NA, \"b\", \"c\")) #> [1] \"a\" \"b\" \"c\" #> [1] \"a\" \"b\" \"c\" # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab all the parameters in a function — grab_fun_par","title":"Grab all the parameters in a function — grab_fun_par","text":"grab_fun_par() grabs parameters defined function. particularly useful need pass parameters one function another (e.g., using .call()). Credits: Function adapted B. Christian Kamgang's contribution Stack Overflow discussion.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab all the parameters in a function — grab_fun_par","text":"","code":"grab_fun_par()"},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab all the parameters in a function — grab_fun_par","text":"list containing parameters function called.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab all the parameters in a function — grab_fun_par","text":"","code":"foo <- function(a = 1) grab_fun_par()  foo() #> $a #> [1] 1 #>  #> $a # Expected #> [1] 1"},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a NA value of the same type of an R object — na_as","title":"Return a NA value of the same type of an R object — na_as","text":"na_as() returns NA value class attributes specific R object. function made facilitate assigning NAs dynamically.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a NA value of the same type of an R object — na_as","text":"","code":"na_as(x)  # S3 method for class 'logical' na_as(x)  # S3 method for class 'character' na_as(x)  # S3 method for class 'integer' na_as(x)  # S3 method for class 'numeric' na_as(x)  # S3 method for class 'Duration' na_as(x)  # S3 method for class 'Period' na_as(x)  # S3 method for class 'difftime' na_as(x)  # S3 method for class 'hms' na_as(x)  # S3 method for class 'Date' na_as(x)  # S3 method for class 'hms' na_as(x)  # S3 method for class 'POSIXct' na_as(x)  # S3 method for class 'POSIXlt' na_as(x)  # S3 method for class 'Interval' na_as(x)"},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a NA value of the same type of an R object — na_as","text":"x atomic vector, provided na_as() method .","code":""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a NA value of the same type of an R object — na_as","text":"NA value class attributes x.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a NA value of the same type of an R object — na_as","text":"","code":"na_as(TRUE) #> [1] NA #> [1] NA # Expected class(na_as(TRUE)) #> [1] \"logical\" #> [1] \"logical\" # Expected  na_as(as.Date(\"2020-01-01\")) #> [1] NA #> [1] NA # Expected class(na_as(as.Date(\"2020-01-01\"))) #> [1] \"Date\" #> [1] \"Date\"  # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/normalize_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize file names — normalize_names","title":"Normalize file names — normalize_names","text":"normalize_names() normalize file names make machine-readable. converts names lowercase replaces spaces special characters hyphens. function follows naming conventions Tidyverse Style Guide.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/normalize_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize file names — normalize_names","text":"","code":"normalize_names(   path = clipr::read_clip(),   exceptions = c(\"^README\", \"^OFL.txt$\", \"^DESCRIPTION\", \"^Google README.txt$\"),   just_dirs = FALSE )"},{"path":"https://danielvartan.github.io/rutils/reference/normalize_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize file names — normalize_names","text":"path (Optional) character string indicating files directory path. Defaults clipboard content. exceptions (Optional) character vector regex patterns files exclude renaming. just_dirs (Optional) logical flag indicating directory names normalized (Default: FALSE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/normalize_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize file names — normalize_names","text":"invisible NULL. function used side effect.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/normalize_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize file names — normalize_names","text":"","code":"dir <- tempfile(\"\") dir.create(dir) |> invisible()  file <- tempfile(\"Test - Test-\", tmpdir = dir) file.create(file) |> invisible()  normalize_names(dir)  list.files(dir) #> [1] \"test-test-1c9d16d6d5ad\" #> [1] \"test-test-***\" # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"raw_data_1() returns raw data paths [INSERT PACKAGE NAME] package.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"","code":"raw_data_1(file = NULL, package = NULL)"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"file (Optional) character vector indicating file name(s) raw data. NULL, raw data file names returned (Default: NULL). package (Optional) character string indicating package database data. NULL, function try use basename working directory (Default: NULL).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"file == NULL, character vector file names available. Else, string file name path.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"","code":"if (interactive()) { ## To list all raw data file names available    raw_data_1()  ## To get the file path from a specific raw data    raw_data_1(raw_data()[1]) }"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"raw_data_2() returns raw data paths [INSERT PACKAGE NAME] package.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"","code":"raw_data_2(type = NULL, file = NULL, package = NULL)"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"type (Optional) character string indicating file type raw data (Default: NULL). file (Optional) character vector indicating file name(s) raw data (Default: NULL). package (Optional) character string indicating package database data. NULL, function try use basename working directory (Default: NULL).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"type = NULL, character vector file type names available. type != NULL file = NULL, character vector file names available type. type != NULL file != NULL, character vector file name(s) path.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"","code":"if (interactive()) {   raw_data_2() }"},{"path":"https://danielvartan.github.io/rutils/reference/rutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rutils: Utility Functions for R — rutils-package","title":"rutils: Utility Functions for R — rutils-package","text":"collection utility functions R created Daniel Vartanian.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/rutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rutils: Utility Functions for R — rutils-package","text":"Maintainer: Daniel Vartanian danvartan@gmail.com (ORCID) [conceptor, copyright holder]","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress messages and warnings — shush","title":"Suppress messages and warnings — shush","text":"shush() wrapper around suppressMessages() suppressWarnings() allows suppress messages warnings single function call. designed used pipes.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress messages and warnings — shush","text":"","code":"shush(x, quiet = TRUE)"},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress messages and warnings — shush","text":"x expression, usually function call. quiet (Optional) logical flag value indicating whether suppress messages warnings. can used condition messages warnings inside functions (Default: TRUE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress messages and warnings — shush","text":"object x messages warnings suppressed.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress messages and warnings — shush","text":"","code":"message(\"test\") |> shush() message(\"test\") |> shush(quiet = FALSE) #> test #> test # Expected  warning(\"test\") |> shush() warning(\"test\") |> shush(quiet = FALSE) #> Warning: test #> Warning: test # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap two values if a condition is met — swap_if","title":"Swap two values if a condition is met — swap_if","text":"swap_if() swaps two values condition met.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap two values if a condition is met — swap_if","text":"","code":"swap_if(x, y, condition = TRUE)"},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap two values if a condition is met — swap_if","text":"x type R object. y type R object. condition logical flag indicating values swapped (Default: TRUE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap two values if a condition is met — swap_if","text":"list swapped values.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap two values if a condition is met — swap_if","text":"","code":"swap_if(1, 2) #> $x #> [1] 2 #>  #> $y #> [1] 1 #>  #> $x # Expected #> [1] 2 #> #> $y #> [1] 1  swap_if(1, 2, condition = FALSE) #> $x #> [1] 1 #>  #> $y #> [1] 2 #>  #> $x # Expected #> [1] 1 #> #> $y #> [1] 2"},{"path":"https://danielvartan.github.io/rutils/reference/swap_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap values in a vector — swap_vector","title":"Swap values in a vector — swap_vector","text":"swap_vector() swaps values vector specified value.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/swap_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap values in a vector — swap_vector","text":"","code":"swap_vector(x, swap = na_as(x), except = NULL, preserve_nas = FALSE)"},{"path":"https://danielvartan.github.io/rutils/reference/swap_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap values in a vector — swap_vector","text":"x atomic vector. swap (Optional) single value swap values x (Default: na_as(x)). except (Optional) vector values exclude swapping. preserve_nas (Optional) logical flag indicating function must preserve NA values x (Default: FALSE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/swap_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap values in a vector — swap_vector","text":"type object x swapped values.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/swap_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap values in a vector — swap_vector","text":"","code":"swap_vector(1:10) #>  [1] NA NA NA NA NA NA NA NA NA NA #> [1] NA NA NA NA NA NA NA NA NA NA  swap_vector(1:10, swap = 0L, except = 5:7) #>  [1] 0 0 0 0 5 6 7 0 0 0 #> [1] 0 0 0 0 5 6 7 0 0 0  swap_vector(c(\"a\", \"b\", NA, \"c\"), swap = \"d\", preserve_nas = TRUE) #> [1] \"d\" \"d\" NA  \"d\" #> [1] \"d\" \"d\" NA  \"d\""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Update package versions in the `DESCRIPTION“ file — update_pkg_versions","title":"Update package versions in the `DESCRIPTION“ file — update_pkg_versions","text":"update_pkg_versions() updates version packages listed DESCRIPTION file R package installed versions. package comes typical installation R (e.g., base, utils), function update version previous minor version current R version. made avoid errors CI/CD.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update package versions in the `DESCRIPTION“ file — update_pkg_versions","text":"","code":"update_pkg_versions(   file = here::here(\"DESCRIPTION\"),   old_r_version = bump_back_r_version() )"},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update package versions in the `DESCRIPTION“ file — update_pkg_versions","text":"file (Optional) string indicating path DESCRIPTION file. old_r_version (Optional) string indicating previous minor version current R version.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update package versions in the `DESCRIPTION“ file — update_pkg_versions","text":"invisible NULL. function used side effect.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Put a vector into c() — vector_to_c","title":"Put a vector into c() — vector_to_c","text":"vector_to_c() put vector c() function. function useful want assign values vector programming R.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put a vector into c() — vector_to_c","text":"","code":"vector_to_c(x, quote = TRUE, clipboard = TRUE)"},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put a vector into c() — vector_to_c","text":"x atomic vector. quote logical flag indicating values wrapped double quotes (Default: TRUE). clipboard logical flag indicating output copied clipboard (Default: TRUE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put a vector into c() — vector_to_c","text":"character string values x inside c() function.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put a vector into c() — vector_to_c","text":"","code":"vector_to_c(letters[1:5], clipboard = FALSE) #> c(\"a\", \"b\", \"c\", \"d\", \"e\") #> [1] \"c(\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\")\" #> c(\"a\", \"b\", \"c\", \"d\", \"e\") # Expected  vector_to_c(1:5, quote = FALSE, clipboard = FALSE) #> c(1, 2, 3, 4, 5) #> [1] \"c(1, 2, 3, 4, 5)\" #> c(1, 2, 3, 4, 5) # Expected"},{"path":"https://danielvartan.github.io/rutils/news/index.html","id":"rutils-0009000","dir":"Changelog","previous_headings":"","what":"rutils 0.0.0.9000","title":"rutils 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
