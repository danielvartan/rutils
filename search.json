[{"path":"https://danielvartan.github.io/rutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daniel Vartanian Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danielvartan.github.io/rutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Vartanian. Author, maintainer, conceptor, copyright holder.","code":""},{"path":"https://danielvartan.github.io/rutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vartanian, D.. (2025). {rutils}: Utility functions R. R package. https://danielvartan.github.io/rutils","code":"@Misc{,   title = {{rutils}: Utility functions for R},   author = {Daniel Vartanian},   year = {2025},   url = {https://danielvartan.github.io/rutils},   note = {R package}, }"},{"path":[]},{"path":"https://danielvartan.github.io/rutils/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Utility Functions for R","text":"🧰🛠️🔧⚙️🔗🔨⛏️🪓🪚🪛🧱 rutils R package (Daniel Vartanian) use store organize utility functions ready moved package. package intended public use, welcome use find helpful. Please note functions exported documented. Access source code see .","code":""},{"path":"https://danielvartan.github.io/rutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility Functions for R","text":"can install rutils using remotes package:","code":"remotes::install_github(\"danielvartan/rutils\")"},{"path":"https://danielvartan.github.io/rutils/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Utility Functions for R","text":"rutils code released MIT license.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/col2hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a color name to hexadecimal format — col2hex","title":"Convert a color name to hexadecimal format — col2hex","text":"col2hex() converts color name present grDevices::colors() hexadecimal format.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/col2hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a color name to hexadecimal format — col2hex","text":"","code":"col2hex(x)"},{"path":"https://danielvartan.github.io/rutils/reference/col2hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a color name to hexadecimal format — col2hex","text":"x character vector color names present grDevices::colors(). Hex colors returned .","code":""},{"path":"https://danielvartan.github.io/rutils/reference/col2hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a color name to hexadecimal format — col2hex","text":"character vector hexadecimal color codes.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/col2hex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a color name to hexadecimal format — col2hex","text":"Adapted Mikael Jagan's contribution Stack Overflow discussion.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/col2hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a color name to hexadecimal format — col2hex","text":"","code":"col2hex(\"red\") #> [1] \"#FF0000\" #> [1] \"#FF0000\"  col2hex(c(\"red\", \"green\", \"blue\")) #> [1] \"#FF0000\" \"#00FF00\" \"#0000FF\" #> [1] \"#FF0000\" \"#00FF00\" \"#0000FF\"  col2hex(c(\"red\", \"#000\")) #> [1] \"#FF0000\" \"#000000\" #> [1] \"#FF0000\" \"#000000\""},{"path":"https://danielvartan.github.io/rutils/reference/cut_interval_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the interval means of a cut factor — cut_interval_mean","title":"Compute the interval means of a cut factor — cut_interval_mean","text":"cut_interval_mean() computes interval means cut factor, regardless open closed nature.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/cut_interval_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the interval means of a cut factor — cut_interval_mean","text":"","code":"cut_interval_mean(x, round = FALSE, names = FALSE)"},{"path":"https://danielvartan.github.io/rutils/reference/cut_interval_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the interval means of a cut factor — cut_interval_mean","text":"x factor character vector cut intervals. round logical flag indicating whether round means 0`` decimal places (Default: FALSE`). names logical flag indicating whether name output vector original intervals (Default: FALSE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/cut_interval_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the interval means of a cut factor — cut_interval_mean","text":"numeric vector interval means.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/cut_interval_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the interval means of a cut factor — cut_interval_mean","text":"","code":"cut(1:5, breaks = 3) #> [1] (0.996,2.33] (0.996,2.33] (2.33,3.67]  (3.67,5]     (3.67,5]     #> Levels: (0.996,2.33] (2.33,3.67] (3.67,5] #> [1] (0.996,2.33] (0.996,2.33] (2.33,3.67]  (3.67,5] # Expected #> [5] (3.67,5] #> Levels: (0.996,2.33] (2.33,3.67] (3.67,5]  cut(1:5, breaks = 3) |> cut_interval_mean() #> [1] 1.663 1.663 3.000 4.335 4.335 #> [1] 1.663 1.663 3.000 4.335 4.335 # Expected  cut(1:5, breaks = 3) |> cut_interval_mean(names = TRUE) #> (0.996,2.33] (0.996,2.33]  (2.33,3.67]     (3.67,5]     (3.67,5]  #>        1.663        1.663        3.000        4.335        4.335  #> # Expected #> (0.996,2.33] (0.996,2.33]  (2.33,3.67]     (3.67,5]     (3.67,5] #>       1.663        1.663        3.000        4.335        4.335  cut(1:5, breaks = 3) |> cut_interval_mean(round = TRUE) #> [1] 2 2 3 4 4 #> [1] 2 2 3 4 4 # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NA values from an atomic object — drop_na","title":"Remove NA values from an atomic object — drop_na","text":"drop_na() remove NA values atomic object.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NA values from an atomic object — drop_na","text":"","code":"drop_na(x)"},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NA values from an atomic object — drop_na","text":"x atomic object type.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NA values from an atomic object — drop_na","text":"object type x NA values removed.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/drop_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NA values from an atomic object — drop_na","text":"","code":"drop_na(c(1, NA, 2, 3, NA, 4)) #> [1] 1 2 3 4 #> [1] 1 2 3 4 # Expected  drop_na(c(\"a\", NA, \"b\", \"c\")) #> [1] \"a\" \"b\" \"c\" #> [1] \"a\" \"b\" \"c\" # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/get_file_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file extensions — get_file_ext","title":"Get file extensions — get_file_ext","text":"get_file_ext() similar file_ext(), difference returns file extension dot separator (e.g., .csv).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/get_file_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file extensions — get_file_ext","text":"","code":"get_file_ext(file)"},{"path":"https://danielvartan.github.io/rutils/reference/get_file_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file extensions — get_file_ext","text":"file character vector file paths.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/get_file_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file extensions — get_file_ext","text":"character vector containing file extension files.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/get_file_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file extensions — get_file_ext","text":"","code":"get_file_ext(\"example.txt\") #> [1] \".txt\" #> [1] \".txt\" # Expected  get_file_ext(\"/path/to/file.tar.gz\") #> [1] \".gz\" #> [1] \".gz\"  # Expected  get_file_ext(\"no-extension\") #> [1] NA #> [1] NA # Expected  get_file_ext(c(\"data.csv\", \"data.rds\")) #> [1] \".csv\" \".rds\" #> [1] \".csv\" \".rds\" # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/get_file_name_without_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file names without the extension — get_file_name_without_ext","title":"Get file names without the extension — get_file_name_without_ext","text":"get_file_name_without_ext() returns file names without extension part.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/get_file_name_without_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file names without the extension — get_file_name_without_ext","text":"","code":"get_file_name_without_ext(file)"},{"path":"https://danielvartan.github.io/rutils/reference/get_file_name_without_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file names without the extension — get_file_name_without_ext","text":"file character vector file paths.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/get_file_name_without_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file names without the extension — get_file_name_without_ext","text":"character vector containing file names without extension part.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/get_file_name_without_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file names without the extension — get_file_name_without_ext","text":"","code":"get_file_name_without_ext(\"example.txt\") #> [1] \"example\" #> [1] \"example\" # Expected  get_file_name_without_ext(\"/path/to/file.tar.gz\") #> [1] \"file.tar\" #> [1] \"file.tar\"  # Expected  get_file_name_without_ext(\"no-extension\") #> [1] \"no-extension\" #> [1] \"no-extension\" # Expected  get_file_name_without_ext(c(\"data.csv\", \"data.rds\")) #> [1] \"data\" \"data\" #> [1] \"data\" \"data\" # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab all the parameters in a function — grab_fun_par","title":"Grab all the parameters in a function — grab_fun_par","text":"grab_fun_par() grabs parameters defined function. particularly useful need pass parameters one function another (e.g., using .call()). Credits: Function adapted B. Christian Kamgang's contribution Stack Overflow discussion.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab all the parameters in a function — grab_fun_par","text":"","code":"grab_fun_par()"},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab all the parameters in a function — grab_fun_par","text":"list containing parameters function called.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/grab_fun_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab all the parameters in a function — grab_fun_par","text":"","code":"foo <- function(a = 1) grab_fun_par()  foo() #> $a #> [1] 1 #>  #> $a # Expected #> [1] 1"},{"path":"https://danielvartan.github.io/rutils/reference/list_replace_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace matches in a list — list_replace_all","title":"Replace matches in a list — list_replace_all","text":"list_replace_all() replaces matches atomic vectors inside list replacement value. list nested, function recursively apply replacement nested lists.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/list_replace_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace matches in a list — list_replace_all","text":"","code":"list_replace_all(list, pattern = \"^$\", replacement = NULL)"},{"path":"https://danielvartan.github.io/rutils/reference/list_replace_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace matches in a list — list_replace_all","text":"list list pairlist object. pattern character string containing regular expression matched list. replacement atomic value replace matches .","code":""},{"path":"https://danielvartan.github.io/rutils/reference/list_replace_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace matches in a list — list_replace_all","text":"list matches replaced replacement value.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/list_replace_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace matches in a list — list_replace_all","text":"match, replacement value class original value, function return replacement value . replacement value class original value, function return vector replacement value position match.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/list_replace_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace matches in a list — list_replace_all","text":"","code":"list_replace_all(list(a = \"\", b = \"b\", c = list(d = \"\", e = \"e\"))) #> $a #> NULL #>  #> $b #> [1] \"b\" #>  #> $c #> $c$d #> NULL #>  #> $c$e #> [1] \"e\" #>  #>  #> $a # Expected #> NULL #> #> $b #> [1] \"b\" #> #> $c #> $c$d #> NULL #> #> $c$e #> [1] \"e\""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a NA value of the same type of an R object — na_as","title":"Return a NA value of the same type of an R object — na_as","text":"na_as() returns NA value class attributes specific R object. function made facilitate assigning NAs dynamically.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a NA value of the same type of an R object — na_as","text":"","code":"na_as(x)  # S3 method for class 'logical' na_as(x)  # S3 method for class 'character' na_as(x)  # S3 method for class 'integer' na_as(x)  # S3 method for class 'numeric' na_as(x)  # S3 method for class 'Duration' na_as(x)  # S3 method for class 'Period' na_as(x)  # S3 method for class 'difftime' na_as(x)  # S3 method for class 'hms' na_as(x)  # S3 method for class 'Date' na_as(x)  # S3 method for class 'hms' na_as(x)  # S3 method for class 'POSIXct' na_as(x)  # S3 method for class 'POSIXlt' na_as(x)  # S3 method for class 'Interval' na_as(x)"},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a NA value of the same type of an R object — na_as","text":"x atomic vector, provided na_as() method .","code":""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a NA value of the same type of an R object — na_as","text":"NA value class attributes x.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/na_as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a NA value of the same type of an R object — na_as","text":"","code":"na_as(TRUE) #> [1] NA #> [1] NA # Expected class(na_as(TRUE)) #> [1] \"logical\" #> [1] \"logical\" # Expected  na_as(as.Date(\"2020-01-01\")) #> [1] NA #> [1] NA # Expected class(na_as(as.Date(\"2020-01-01\"))) #> [1] \"Date\" #> [1] \"Date\"  # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"raw_data_1() returns raw data paths [INSERT PACKAGE NAME] package.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"","code":"raw_data_1(file = NULL, package = NULL)"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"file (Optional) character vector indicating file name(s) raw data. NULL, raw data file names returned (Default: NULL). package (Optional) character string indicating package database data. NULL, function try use basename working directory (Default: NULL).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"file == NULL, character vector file names available. Else, string file name path.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_1","text":"","code":"if (interactive()) { ## To list all raw data file names available    raw_data_1()  ## To get the file path from a specific raw data    raw_data_1(raw_data()[1]) }"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"raw_data_2() returns raw data paths [INSERT PACKAGE NAME] package.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"","code":"raw_data_2(type = NULL, file = NULL, package = NULL)"},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"type (Optional) character string indicating file type raw data (Default: NULL). file (Optional) character vector indicating file name(s) raw data (Default: NULL). package (Optional) character string indicating package database data. NULL, function try use basename working directory (Default: NULL).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"type = NULL, character vector file type names available. type != NULL file = NULL, character vector file names available type. type != NULL file != NULL, character vector file name(s) path.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/raw_data_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to [INSERT PACKAGE NAME] raw data — raw_data_2","text":"","code":"if (interactive()) {   raw_data_2() }"},{"path":"https://danielvartan.github.io/rutils/reference/remove_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove outliers from a numeric vector — remove_outliers","title":"Remove outliers from a numeric vector — remove_outliers","text":"remove_outliers() removes outliers numeric vector using either interquartile range (IQR) method standard deviation (SD) method.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/remove_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove outliers from a numeric vector — remove_outliers","text":"","code":"remove_outliers(x, method = \"iqr\", iqr_mult = 1.5, sd_mult = 3)"},{"path":"https://danielvartan.github.io/rutils/reference/remove_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove outliers from a numeric vector — remove_outliers","text":"x numeric vector remove outliers. method (Optional) character string specifying outlier detection method. Must either \"iqr\" interquartile range method \"sd\" standard deviation method (Default: \"iqr\"). iqr_mult (Optional) numeric multiplier IQR threshold (Default: 1.5). sd_mult (Optional) numeric multiplier standard deviation threshold (Default: 3).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/remove_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove outliers from a numeric vector — remove_outliers","text":"numeric vector outliers removed.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/remove_outliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove outliers from a numeric vector — remove_outliers","text":"using \"iqr\" method, values considered outliers Q1 - (iqr_mult * IQR) Q3 + (iqr_mult * IQR), Q1 first quartile, Q3 third quartile, IQR interquartile range. using \"sd\" method, values considered outliers mean - (sd_mult * SD) mean + (sd_mult * SD), SD standard deviation.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/remove_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove outliers from a numeric vector — remove_outliers","text":"","code":"remove_outliers(c(1, 2, 3, 4, 5), method = \"iqr\") #> [1] 1 2 3 4 5 #> [1] 1 2 3 4 5 # Expected  remove_outliers(c(1, 2, 3, 4, 10), method = \"iqr\") #> [1] 1 2 3 4 #> [1] 1 2 3 4 # Expected  remove_outliers(c(1, 5, 6, 7, 10), method = \"iqr\", iqr_mult = 1) #> [1] 5 6 7 #> [1] 5 6 7 # Expected  remove_outliers(c(1, 2, 3, 4, 5), method = \"sd\", sd_mult = 1) #> [1] 2 3 4 #> [1] 2 3 4 # Expected  remove_outliers(c(1, 2, 3, 4, 100), method = \"sd\", sd_mult = 1) #> [1] 1 2 3 4 #> [1] 1 2 3 4 # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/rutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rutils: Utility Functions for R — rutils-package","title":"rutils: Utility Functions for R — rutils-package","text":"collection utility functions R created Daniel Vartanian.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/rutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rutils: Utility Functions for R — rutils-package","text":"Maintainer: Daniel Vartanian danvartan@gmail.com (ORCID) [conceptor, copyright holder]","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress messages and warnings — shush","title":"Suppress messages and warnings — shush","text":"shush() wrapper around suppressMessages() suppressWarnings() allows suppress messages warnings single function call. designed used pipes.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress messages and warnings — shush","text":"","code":"shush(x, quiet = TRUE)"},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress messages and warnings — shush","text":"x expression, usually function call. quiet (Optional) logical flag value indicating whether suppress messages warnings. can used condition messages warnings inside functions (Default: TRUE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress messages and warnings — shush","text":"object x messages warnings suppressed.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/shush.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress messages and warnings — shush","text":"","code":"message(\"test\") |> shush() message(\"test\") |> shush(quiet = FALSE) #> test #> test # Expected  warning(\"test\") |> shush() warning(\"test\") |> shush(quiet = FALSE) #> Warning: test #> Warning: test # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/std_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the standard error of the sample mean — std_error","title":"Compute the standard error of the sample mean — std_error","text":"std_error() computes standard error sample mean.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/std_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the standard error of the sample mean — std_error","text":"","code":"std_error(x)"},{"path":"https://danielvartan.github.io/rutils/reference/std_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the standard error of the sample mean — std_error","text":"x numeric vector sample data.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/std_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the standard error of the sample mean — std_error","text":"number representing standard error.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/std_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the standard error of the sample mean — std_error","text":"standard error can estimated standard deviation sample (\\(\\sigma_{\\bar{x}}\\)) divided square root sample size (\\(\\sqrt{n}\\)). $$\\sigma_{\\bar{x}} = \\frac{\\sigma}{\\sqrt{n}} \\approx \\frac{s}{\\sqrt{n}}$$","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/std_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the standard error of the sample mean — std_error","text":"","code":"1:100 |> std_error() |> round(5) #> [1] 2.90115 #> [1] 2.90115 # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap two values if a condition is met — swap_if","title":"Swap two values if a condition is met — swap_if","text":"swap_if() swaps two values condition met.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap two values if a condition is met — swap_if","text":"","code":"swap_if(x, y, condition = TRUE)"},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap two values if a condition is met — swap_if","text":"x type R object. y R object class length x. condition logical flag indicating values swapped (Default: TRUE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap two values if a condition is met — swap_if","text":"list swapped values.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/swap_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap two values if a condition is met — swap_if","text":"","code":"swap_if(1, 2) #> $x #> [1] 2 #>  #> $y #> [1] 1 #>  #> $x # Expected #> [1] 2 #> #> $y #> [1] 1  swap_if(1, 2, condition = FALSE) #> $x #> [1] 1 #>  #> $y #> [1] 2 #>  #> $x # Expected #> [1] 1 #> #> $y #> [1] 2  swap_if(letters, LETTERS, c(rep(TRUE, 13), rep(FALSE, 13))) #> $x #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $y #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" #> [20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\" #>  #> $x #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"n\" #> [15] \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #> #> $y #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"N\" #> [15] \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\""},{"path":"https://danielvartan.github.io/rutils/reference/test_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for outliers in a numeric vector — test_outlier","title":"Test for outliers in a numeric vector — test_outlier","text":"test_outlier() identifies outliers numeric vector using either interquartile range (IQR) method standard deviation (SD) method.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/test_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for outliers in a numeric vector — test_outlier","text":"","code":"test_outlier(x, method = \"iqr\", iqr_mult = 1.5, sd_mult = 3)"},{"path":"https://danielvartan.github.io/rutils/reference/test_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for outliers in a numeric vector — test_outlier","text":"x numeric vector test outliers. method (Optional) character string specifying outlier detection method. Must either \"iqr\" interquartile range method \"sd\" standard deviation method (Default: \"iqr\"). iqr_mult (Optional) numeric multiplier IQR threshold (Default: 1.5). sd_mult (Optional) numeric multiplier standard deviation threshold (Default: 3).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/test_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for outliers in a numeric vector — test_outlier","text":"logical vector length x TRUE outliers FALSE non-outliers.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/test_outlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for outliers in a numeric vector — test_outlier","text":"using \"iqr\" method, values considered outliers Q1 - (iqr_mult * IQR) Q3 + (iqr_mult * IQR), Q1 first quartile, Q3 third quartile, IQR interquartile range. using \"sd\" method, values considered outliers mean - (sd_mult * SD) mean + (sd_mult * SD), SD standard deviation.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/test_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for outliers in a numeric vector — test_outlier","text":"","code":"test_outlier(c(1, 2, 3, 4, 5), method = \"iqr\") #> [1] FALSE FALSE FALSE FALSE FALSE #> [1] FALSE FALSE FALSE FALSE FALSE # Expected  test_outlier(c(1, 2, 3, 4, 10), method = \"iqr\") #> [1] FALSE FALSE FALSE FALSE  TRUE #> [1] FALSE FALSE FALSE FALSE  TRUE # Expected  test_outlier(c(1, 5, 6, 7, 10), method = \"iqr\", iqr_mult = 1) #> [1]  TRUE FALSE FALSE FALSE  TRUE #> [1]  TRUE FALSE FALSE FALSE  TRUE # Expected  test_outlier(c(1, 2, 3, 4, 5), method = \"sd\", sd_mult = 1) #> [1]  TRUE FALSE FALSE FALSE  TRUE #> [1] TRUE FALSE FALSE FALSE  TRUE # Expected  test_outlier(c(1, 2, 3, 4, 100), method = \"sd\", sd_mult = 1) #> [1] FALSE FALSE FALSE FALSE  TRUE #> [1] FALSE FALSE FALSE FALSE  TRUE # Expected"},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Update package versions in the DESCRIPTION file — update_pkg_versions","title":"Update package versions in the DESCRIPTION file — update_pkg_versions","text":"update_pkg_versions() updates version packages listed DESCRIPTION file R package installed versions. package comes typical installation R (e.g., base, utils), function update version previous minor version current R version. made avoid errors CI/CD.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update package versions in the DESCRIPTION file — update_pkg_versions","text":"","code":"update_pkg_versions(   file = here::here(\"DESCRIPTION\"),   old_r_version = bump_back_r_version() )"},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update package versions in the DESCRIPTION file — update_pkg_versions","text":"file (Optional) string indicating path DESCRIPTION file. old_r_version (Optional) string indicating previous minor version current R version.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update package versions in the DESCRIPTION file — update_pkg_versions","text":"invisible NULL. function used side effect.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the year in system files of a package — update_pkg_year","title":"Update the year in system files of a package — update_pkg_year","text":"update_pkg_year() updates year system files package.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the year in system files of a package — update_pkg_year","text":"","code":"update_pkg_year(   file = c(here::here(\"LICENSE\"), here::here(\"LICENSE.md\"), here::here(\"inst\",     \"CITATION\")) )"},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the year in system files of a package — update_pkg_year","text":"file (Optional) character vector indicating path files must updated. Default LICENSE, LICENSE.md, inst/CITATION.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/update_pkg_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the year in system files of a package — update_pkg_year","text":"invisible NULL. function used side effect.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/vct_replace_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values in a vector — vct_replace_all","title":"Replace values in a vector — vct_replace_all","text":"vct_replace_all() replaces values vector specified value.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vct_replace_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values in a vector — vct_replace_all","text":"","code":"vct_replace_all(x, replacement = na_as(x), except = NULL, preserve_nas = FALSE)"},{"path":"https://danielvartan.github.io/rutils/reference/vct_replace_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values in a vector — vct_replace_all","text":"x atomic vector. replacement (Optional) single value replace values x (Default: na_as(x)). except (Optional) vector values exclude replacement. preserve_nas (Optional) logical flag indicating function must preserve NA values x (Default: FALSE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vct_replace_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace values in a vector — vct_replace_all","text":"type object x values replaced.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/rutils/reference/vct_replace_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace values in a vector — vct_replace_all","text":"","code":"vct_replace_all(1:10) #>  [1] NA NA NA NA NA NA NA NA NA NA #> [1] NA NA NA NA NA NA NA NA NA NA  vct_replace_all(1:10, replacement = 0L, except = 5:7) #>  [1] 0 0 0 0 5 6 7 0 0 0 #> [1] 0 0 0 0 5 6 7 0 0 0  vct_replace_all(c(\"a\", \"b\", NA, \"c\"), replacement = \"d\", preserve_nas = TRUE) #> [1] \"d\" \"d\" NA  \"d\" #> [1] \"d\" \"d\" NA  \"d\""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Put a vector into c() — vector_to_c","title":"Put a vector into c() — vector_to_c","text":"vector_to_c() put vector c() function. function useful want assign values vector programming R.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put a vector into c() — vector_to_c","text":"","code":"vector_to_c(x, quote = TRUE, clipboard = TRUE)"},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put a vector into c() — vector_to_c","text":"x atomic vector. quote logical flag indicating values wrapped double quotes (Default: TRUE). clipboard logical flag indicating output copied clipboard (Default: TRUE).","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put a vector into c() — vector_to_c","text":"character string values x inside c() function.","code":""},{"path":"https://danielvartan.github.io/rutils/reference/vector_to_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put a vector into c() — vector_to_c","text":"","code":"vector_to_c(letters[1:5], clipboard = FALSE) #> c(\"a\", \"b\", \"c\", \"d\", \"e\") #> [1] \"c(\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\")\" #> c(\"a\", \"b\", \"c\", \"d\", \"e\") # Expected  vector_to_c(1:5, quote = FALSE, clipboard = FALSE) #> c(1, 2, 3, 4, 5) #> [1] \"c(1, 2, 3, 4, 5)\" #> c(1, 2, 3, 4, 5) # Expected"},{"path":"https://danielvartan.github.io/rutils/news/index.html","id":"rutils-0009000","dir":"Changelog","previous_headings":"","what":"rutils 0.0.0.9000","title":"rutils 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
