% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_outlier.R
\name{test_outlier}
\alias{test_outlier}
\title{Test for outliers in a numeric vector}
\usage{
test_outlier(x, method = "iqr", iqr_mult = 1.5, sd_mult = 3)
}
\arguments{
\item{x}{A \code{\link[base:numeric]{numeric}} vector to test for outliers.}

\item{method}{(Optional) A \code{\link[base:character]{character}} string specifying
the outlier detection method. Must be either \code{"iqr"} for interquartile
range method or \code{"sd"} for standard deviation method (Default: \code{"iqr"}).}

\item{iqr_mult}{(Optional) A \code{\link[base:numeric]{numeric}} multiplier for the
IQR threshold (Default: \code{1.5}).}

\item{sd_mult}{(Optional) A \code{\link[base:numeric]{numeric}} multiplier for the
standard deviation threshold (Default: \code{3}).}
}
\value{
A \code{\link[base:logical]{logical}} vector of the same length as \code{x} with
\code{TRUE} for outliers and \code{FALSE} for non-outliers.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

\code{test_outlier()} identifies outliers in a numeric vector using either the
interquartile range (IQR) method or the standard deviation (SD) method.
}
\details{
When using the \code{"iqr"} method, values are considered outliers if they are
below \code{Q1 - (iqr_mult * IQR)} or above \code{Q3 + (iqr_mult * IQR)}, where \code{Q1}
is the first quartile, \code{Q3} is the third quartile, and \code{IQR} is the
interquartile range.

When using the \code{"sd"} method, values are considered outliers if they are
below \code{mean - (sd_mult * SD)} or above \code{mean + (sd_mult * SD)}, where \code{SD}
is the standard deviation.
}
\examples{
test_outlier(c(1, 2, 3, 4, 5), method = "iqr")
#> [1] FALSE FALSE FALSE FALSE FALSE # Expected

test_outlier(c(1, 2, 3, 4, 10), method = "iqr")
#> [1] FALSE FALSE FALSE FALSE  TRUE # Expected

test_outlier(c(1, 5, 6, 7, 10), method = "iqr", iqr_mult = 1)
#> [1]  TRUE FALSE FALSE FALSE  TRUE # Expected

test_outlier(c(1, 2, 3, 4, 5), method = "sd", sd_mult = 1)
#> [1] TRUE FALSE FALSE FALSE  TRUE # Expected

test_outlier(c(1, 2, 3, 4, 100), method = "sd", sd_mult = 1)
#> [1] FALSE FALSE FALSE FALSE  TRUE # Expected
}
\seealso{
Other statistical functions: 
\code{\link{cut_interval_mean}()},
\code{\link{remove_outliers}()},
\code{\link{std_error}()}
}
\concept{statistical functions}
